App.GG.Chip.Arms.paralyzing_ray: App.GG.Chip
  App.GG.Chip.new(
    "parray"
    App.GG.Class.vitality
    App.GG.Chip.Arms.paralyzing_ray.Effect(10, 0.3) // TODO: Alter
    10
    App.GG.img.bazooka
    App.GG.Attributes.new(3,0,1,0) // TODO : Alter
  )


App.GG.Chip.Arms.paralyzing_ray.Effect(dmg: I32, duration: F64): App.GG.Effect<Unit>
  App.GG.Effect {
    App.GG.Effect.charge.reset
    get creature = App.GG.Effect.creature.get
    get center = App.GG.Effect.coord.get_center
    get frame = App.GG.Effect.frame.get
    get grid = App.GG.Effect.grid.get
    get closest_enemy = App.GG.Effect.coord.closest_enemy
    let uduration = I32.to_u64(F64.to_i32(duration*60))
    without creature: App.GG.Effect.pass
    without closest_enemy: App.GG.Effect {
      App.GG.Effect.actions.reset
      App.GG.Effect.chip.waste
      App.GG.Effect.animation.update(App.GG.Animation.attack) // Sets animation for creature
    }
    without frame: App.GG.Effect.pass
    App.GG.Effect {
      App.GG.Effect.vbox.in_tile(App.GG.Chip.Arms.shockwave.img(frame))
      let sduration = U64.to_f64(App.GG.Creature.stun_with_attribute(creature, uduration))
      get dmg = App.GG.Effect.creature.damage_with_attribute(dmg)
      let projectile_info = App.GG.Projectile.Info.new(creature@team, App.GG.Projectile.Status.unit, NatSet.new, 0#64, true)
      let projectile_effect = App.GG.Chip.Arms.paralyzing_ray.Projectile.Effect(dmg, sduration) 
      let projectile = App.GG.Projectile.new(projectile_info, projectile_effect)
      let highest_y = App.GG.Grid.highest_y(grid)
      let spawn_coord = {closest_enemy@fst, highest_y} // Gets the coordinate in front of the creature
      App.GG.Effect.generic_shoot(projectile, spawn_coord, App.GG.Animation.attack, 24, 48)
    }
  }


App.GG.Chip.Arms.paralyzing_ray.Projectile.Effect(dmg: I32, duration: F64): App.GG.Effect<Unit>
  let max_frame = 24#64
  App.GG.Effect {
    get center = App.GG.Effect.coord.get_center
    get frame = App.GG.Effect.frame.get
    get grid = App.GG.Effect.grid.get
    get team = App.GG.Effect.team.get
    let uduration = I32.to_u64(F64.to_i32(duration))
    App.GG.Effect.frame.inc // Increases projectile frame by 1
    without frame: App.GG.Effect.pass
    without team: App.GG.Effect.pass
    let eff = 
      App.GG.Effect {
        let shock = App.GG.Creature.Status.Stun.shock
        let animation = App.GG.Animation.stun
        App.GG.Effect.vbox.at_tile(center, App.GG.img.target_tile) //change to coord
        App.GG.Effect.projectile.hit.damage_at(dmg, false, false, center) // change to coord
        App.GG.Effect.stun.add(shock, animation , uduration)
      }
    App.GG.Effect {
      eff
      if not(frame =? 0) && ((frame % max_frame) =? 0) then // At frame 30
        App.GG.Effect { 
          get center = App.GG.Effect.coord.get_center
          let next_coord = {center@fst, center@snd - 1}
          //log(App.GG.Coord.show(next_coord))
          App.GG.Effect.projectile.move(next_coord)
            return unit
          }
      else
        App.GG.Effect.pass
    }
  }
